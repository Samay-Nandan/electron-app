name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            build_script: build:linux
            artifact_paths: |
              build/linux/**/*.AppImage
              build/linux/**/*.deb
          - os: windows-latest
            build_script: build:win
            artifact_paths: |
              build/windows/**/*.exe
              build/windows/**/*.zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build full app (${{ matrix.os }})
        run: yarn ${{ matrix.build_script }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: üóÇÔ∏è Log full contents of build/ folder (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "üßæ Listing all files in the build/ directory (recursive)...`n"

          if (Test-Path build) {
            Get-ChildItem -Path build -Recurse | ForEach-Object {
              if ($_.PSIsContainer) {
                Write-Host "üìÅ DIR : $($_.FullName)"
              } else {
                $sizeMB = "{0:N2}" -f ($_.Length / 1MB)
                Write-Host "üìÑ FILE: $($_.FullName) (${sizeMB} MB)"
              }
            }
          } else {
            Write-Host "‚ö†Ô∏è 'build/' directory does not exist yet."
          }

      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact_paths }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
